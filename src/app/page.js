'use client'
import axios from 'axios';
import { useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import Image from 'next/image';
import Head from 'next/head';
import Spinner from '../../components/Spinner';
import Clima from '../../components/Clima';


export default function Home() {
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(''); // Nuevo estado para errores

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_API_KEY}`

  const fetchWeather = async (e) => {
    e.preventDefault();
    if (!city.trim()) {
      setError('Por favor ingresa una ciudad');
      return;
    }
    setLoading(true);
    setError('');
    try {
      const response = await axios.get(url);
      setWeather(response.data);
      setError('');
      setCity('');         // Solo aquí
      setLoading(false);
    } catch (err) {
      console.log(err);
      if (err.response && err.response.status === 404) {
        setError('Ciudad no encontrada');
      } else {
        setError('Ocurrió un error. Intenta de nuevo.');
      }
      setWeather({});
      setLoading(false);
      // NO pongas setCity('') aquí
    }
  };

  if (loading) {
    return <Spinner />;
  } else {
    return (
      <div>
        <Head>
          <title>Weather- Next App</title>
          <meta name='description' content='Generated by '></meta>
        </Head>
        {/* Overlay */}
        <div className='absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]' />
        {/*Background Image */}
        <Image src='https://images.unsplash.com/photo-1579003593419-98f949b9398f?q=80&w=2073&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'
          layout='fill'
          className='object-cover' />
        {/* Search */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-10 '>
          <form onSubmit={fetchWeather} className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl '>
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='border-none text-white focus:outline-none text-2xl'
                type="text"
                placeholder='Search city' />
            </div>
            <button onClick={fetchWeather}>
              <BsSearch size={20} />
            </button>
          </form>
        </div>
        {/* Error */}
        {error && (
          <div data-testid="error-message" className="text-red-500 text-center mt-4">
            {error}
          </div>
        )}
        {/* Weather */}
        {weather.main && <Clima data={weather} />}
      </div>
    );
  }
}
